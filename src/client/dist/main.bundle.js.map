{"version":3,"sources":["/Users/chkdsk/Documents/GitHub/mills/src/client/src/$_lazy_route_resource lazy","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.module.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/common/toastr.service.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/home/home.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/home/home.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/login/login.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/login/login.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.css","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/profile/profile.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/profile/profile.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/register/register.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/register/register.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.css","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.html","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/auth-guard.service.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/authentication.service.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/mining.service.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/task.service.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/environments/environment.ts","/Users/chkdsk/Documents/GitHub/mills/src/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar navbar-light\\\" style=\\\"background-color: #E6E6E6;\\\">\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n     <span class=\\\"navbar-toggler-icon\\\"></span>\\n   </button>\\n<a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Home Tasks</a>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"!auth.isLoggedIn()\\\" routerLink=\\\"/login\\\">Sign in</a>\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"auth.isLoggedIn()\\\" routerLink=\\\"/profile\\\"><fa name=\\\"user\\\"></fa> {{ auth.getUserDetails()?.name }}</a>\\n    </div>\\n    <div class=\\\"navbar-nav ml-auto\\\">\\n      <!-- <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"auth.isLoggedIn()\\\" (click)=\\\"auth.logout()\\\"><fa name=\\\"sign-out\\\"></fa>Logout</a> -->\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"auth.isLoggedIn()\\\" (click)=\\\"auth.logout()\\\"><fa name=\\\"sign-out\\\"></fa>Logout</a>\\n    </div>\\n  </div>\\n</nav>\\n      <router-outlet></router-outlet>\\n\\n<footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n        <p class=\\\"text-muted\\\">&copy; Copyright 2018 | Condor Code factory</p>\\n    </div>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  constructor(public auth: AuthenticationService) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { MiningsComponent } from './components/minings/minings.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { MiningService } from './services/mining.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { ToastrService } from './common/toastr.service';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    HomeComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    MiningsComponent\n  ],\n\n  imports: [\n    CommonModule,\n    SweetAlert2Module.forRoot(),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SweetAlert2Module,\n    RouterModule.forRoot(routes),\n    AngularFontAwesomeModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    NgbCollapseModule.forRoot()\n  ],\n  providers: [\n    AuthenticationService,\n    AuthGuardService,\n    ToastrService,\n    MiningService,\n    {provide: LocationStrategy, useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/app.module.ts","import { Injectable } from '@angular/core'\n\ndeclare let toastr:any\n\n@Injectable()\n\nexport class ToastrService {\n    success(message: string, title?: string) {\n        toastr.success(message, title)\n    }\n    info(message: string, title?: string) {\n        toastr.info(message, title)\n    }\n    warning(message: string, title?: string) {\n        toastr.warning(message, title)\n    }\n    error(message: string, title?: string) {\n        toastr.error(message, title)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/common/toastr.service.ts","module.exports = \"<div class=\\\"card m-3\\\">\\n  <div class=\\\"card-body\\\">\\n\\n  <h1>Hello there</h1>\\n\\n  <p>Won't you please </p>\\n  <!-- <p>Won't you please <a routerLink=\\\"/login\\\">sign in</a></p> -->\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/home/home.component.ts","module.exports = \"<div class=\\\"card m-3\\\">\\n  <div class=\\\"card-body\\\">\\n\\n\\n\\n      <h1 class=\\\"form-signin-heading\\\">Sign in</h1>\\n      <p class=\\\"lead\\\">Not a member? Please instead.</p>\\n      <!-- <p class=\\\"lead\\\">Not a member? Please <a routerLink=\\\"/register\\\">register</a> instead.</p> -->\\n      <form (submit)=\\\"login()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Sign in!</button>\\n      </form>\\n\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  credentials: TokenPayload = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router, private toastr: ToastrService) {}\n\n  login() {\n    this.auth.login(this.credentials).subscribe(() => {\n      this.toastr.success('Login successful.');\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n      this.toastr.error(err);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  max-width: 960px;\\n}\\n\\n.border-top { border-top: 1px solid #e5e5e5; }\\n.border-bottom { border-bottom: 1px solid #e5e5e5; }\\n.border-top-gray { border-top-color: #adb5bd; }\\n\\n.box-shadow { box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05); }\\n\\n.lh-condensed { line-height: 1.25; }\\n\\n.active {}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.css\n// module id = ../../../../../src/app/components/minings/minings.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"mb-3\\\">Vista Minera</h4>\\n    <div class=\\\"progress\\\">\\n        <div class=\\\"progress-bar progress-bar-success progress-bar-striped active\\\" role=\\\"progressbar\\\"\\n        aria-valuenow=\\\"40\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width:40%\\\">\\n          40% Complete (success)\\n        </div>\\n      </div>\\n\\n\\n\\n    <br>\\n    <!--  modal bootstrap-->\\n    <!-- Button trigger modal -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalAdd\\\" >\\n          <i class=\\\"fa fa-plus\\\"></i>\\n        </button>\\n\\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"modalAdd\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"addModalLabel\\\">Add Mining View</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n                <form class=\\\"needs-validation\\\" (submit)=\\\"addMining($event)\\\" novalidate>\\n              <div class=\\\"modal-body\\\">\\n                <div class=\\\"col-md-12 order-md-1\\\">\\n                          <h4 class=\\\"mb-3\\\">Vista Minera</h4>\\n\\n                  <div class=\\\"input-group\\\" class=\\\"row\\\">\\n\\n                      <div class=\\\"col-md-6 mb-3\\\">\\n                        <label for=\\\"name\\\">Minera</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Ex Juan Perez Codelco\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">\\n                          Valid Minera is required.\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-6 mb-3\\\">\\n                        <label for=\\\"picture\\\">Picture</label>\\n                        <input type=\\\"text\\\" name=\\\"picture\\\" id=\\\"picture\\\" [(ngModel)]=\\\"picture\\\" class=\\\"form-control\\\" placeholder=\\\"Add A Picture\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">\\n                          Valid Picture is required.\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-md-6 mb-3\\\">\\n                        <label for=\\\"category\\\">Minera</label>\\n                        <select class=\\\"custom-select d-block w-100\\\" name=\\\"category\\\" id=\\\"category\\\" [(ngModel)]=\\\"category\\\" required>\\n                          <option value=\\\"\\\" >Choose...</option>\\n                          <option>codelco</option>\\n                          <option>barrick</option>\\n                          <option>esperaza</option>\\n                        </select>\\n                        <div class=\\\"invalid-feedback\\\">\\n                          Please select a valid minera.\\n                        </div>\\n                      </div>\\n\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                          <label for=\\\"price\\\">Precio</label>\\n                          <input type=\\\"number\\\" name=\\\"price\\\" id=\\\"price\\\" [(ngModel)]=\\\"price\\\" class=\\\"form-control\\\" placeholder=\\\"$\\\" required>\\n                          <div class=\\\"invalid-feedback\\\">\\n                            Please select a valid Price.\\n                          </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"col-md-12 mb-3\\\">\\n                          <label for=\\\"description\\\">Description</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"description\\\" [(ngModel)]=\\\"description\\\" placeholder=\\\"Description\\\" required>\\n                          <div class=\\\"invalid-feedback\\\">\\n                            Description code required.\\n                          </div>\\n                        </div>\\n\\n\\n                  </div>\\n\\n\\n              </div>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" #btnClose class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" >Save changes</button>\\n              </div>\\n                </form>\\n            </div>\\n          </div>\\n        </div>\\n    <!--  end modal bootstrap-->\\n\\n\\n\\n<table class=\\\"table text-center table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th>name</th>\\n      <th>picture</th>\\n      <th>price</th>\\n      <th>category</th>\\n      <th>description</th>\\n      <th>Operations</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <div  class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n        <img src=\\\"../../assets/img/loader.gif\\\">\\n\\n    </div>\\n    <tr *ngFor=\\\"let mining of minings\\\">\\n\\n      <td >{{ mining.name }}</td>\\n      <td>{{ mining.picture }}</td>\\n      <td>{{ mining.price }}</td>\\n      <td>{{ mining.category }}</td>\\n      <td>{{ mining.description }}</td>\\n      <td>\\n        <swal\\n          #deleteSwal\\n          title=\\\"Delete {{ mining.name }}?\\\"\\n          text=\\\"Swal confirm\\\"\\n          type=\\\"warning\\\"\\n          [showCancelButton]=\\\"true\\\"\\n          [focusCancel]=\\\"true\\\"\\n          (confirm)=\\\"deleteMining(mining._id)\\\">\\n        </swal>\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteSwal.show()\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </button>\\n\\n\\n        <!--  modal bootstrap-->\\n        <!-- Button trigger modal -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#' + mining._id\\\" >\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n\\n            <!-- Modal -->\\n            <div class=\\\"modal fade\\\" id=\\\"{{ mining._id}}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModalLabel\\\" aria-hidden=\\\"true\\\">\\n              <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"editModalLabel\\\">Edit {{ mining.name }}</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    <!-- <form class=\\\"needs-validation\\\"  novalidate> -->\\n                      <div class=\\\"input-group\\\" class=\\\"row\\\">\\n\\n                          <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"name\\\">Minera</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"{{ mining.name }}\\\" required>\\n                            <div class=\\\"invalid-feedback\\\">\\n                              Valid Minera is required.\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"picture\\\">Picture</label>\\n                            <input type=\\\"text\\\" name=\\\"picture\\\" id=\\\"picture\\\" [(ngModel)]=\\\"picture\\\" class=\\\"form-control\\\" placeholder=\\\"{{ mining.picture }}\\\" required>\\n                            <div class=\\\"invalid-feedback\\\">\\n                              Valid Picture is required.\\n                            </div>\\n                          </div>\\n\\n                          <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"category\\\">Minera</label>\\n                            <select class=\\\"custom-select d-block w-100\\\" name=\\\"category\\\" id=\\\"category\\\" [(ngModel)]=\\\"category\\\" required>\\n                              <option value=\\\"\\\" >Choose...</option>\\n                              <option>codelco</option>\\n                              <option>barrick</option>\\n                              <option>esperaza</option>\\n                            </select>\\n                            <div class=\\\"invalid-feedback\\\">\\n                              Please select a valid minera.\\n                            </div>\\n                          </div>\\n\\n                            <div class=\\\"col-md-6 mb-3\\\">\\n                              <label for=\\\"price\\\">Precio</label>\\n                              <input type=\\\"number\\\" name=\\\"price\\\" id=\\\"price\\\" [(ngModel)]=\\\"price\\\" class=\\\"form-control\\\" placeholder=\\\"{{ mining.price }}\\\" required>\\n                              <div class=\\\"invalid-feedback\\\">\\n                                Please select a valid Price.\\n                              </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-12 mb-3\\\">\\n                              <label for=\\\"description\\\">Description</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"description\\\" [(ngModel)]=\\\"description\\\" placeholder=\\\"{{ mining.description }}\\\" required>\\n                              <div class=\\\"invalid-feedback\\\">\\n                                Description code required.\\n                              </div>\\n                            </div>\\n\\n\\n                      </div>\\n\\n                    <!-- </form> -->\\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" #btnCloseEdit class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateMining(mining)\\\">Save changes</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        <!--  end modal bootstrap-->\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.html\n// module id = ../../../../../src/app/components/minings/minings.component.html\n// module chunks = main","import { ViewChild, Component, OnInit, ElementRef } from '@angular/core';\nimport { MiningService } from '../../services/mining.service';\nimport { Mining } from '../../models/Mining';\n\n\n\n@Component({\n  selector: 'app-minings',\n  templateUrl: './minings.component.html',\n  styleUrls: ['./minings.component.css'],\n  providers: [MiningService]\n})\nexport class MiningsComponent implements OnInit {\n  @ViewChild('btnClose') btnClose : ElementRef\n  @ViewChild('btnCloseEdit') btnCloseEdit : ElementRef\n\n  minings: Mining[];\n  _id?: string;\n  name: string;\n  picture: string;\n  price: string;\n  category: string;\n  description: string;\n\n  loading: boolean;\n\n\n  constructor(private miningService: MiningService) {\n    this.loading = true;\n    this.miningService.getMinings()\n      .subscribe(minings => {\n\n        if (!minings){\n          console.log('error server');\n        }else{\n          this.loading = false;\n          console.log(minings);\n          this.minings = minings;\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n  addMining(event){\n    event.preventDefault();\n    console.log(this.name)\n    console.log(this.picture)\n    console.log(this.price)\n    console.log(this.category)\n    console.log(this.description)\n\n    const newMining:Mining = {\n      name: this.name,\n      picture: this.picture,\n      price: this.price,\n      category: this.category,\n      description: this.description\n    };\n\n    this.miningService.addMining(newMining)\n      .subscribe(mining => {\n        this.minings.push(mining);\n        this.name = '';\n        this.picture = '';\n        this.price = '';\n        this.category = '';\n        this.description = '';\n        this.btnClose.nativeElement.click();\n\n      })\n  }\n  deleteMining(id) {\n\n    if (!id == false ){\n      const minings = this.minings;\n      this.miningService.deleteMining(id)\n        .subscribe(data => {\n          // console.log(data)\n          // console.log(data.n);\n          if(data.n == 1) {\n            for(let i = 0; i < minings.length; i++) {\n              if(minings[i]._id == id) {\n                minings.splice(i, 1);\n              }\n            }\n          }\n        })\n    }\n  }\n  updateMining(mining: Mining) {\n\n    const newMining = {\n      _id: mining._id,\n      name: this.name,\n      picture: this.picture,\n      price: this.price,\n      category: this.category,\n      description: this.description\n    };\n    this.miningService.updateMining(newMining)\n      .subscribe(res => {\n          console.log(res);\n          this.name = mining.name;\n          this.picture = mining.picture;\n          this.price = mining.price;\n          this.category = mining.category;\n          this.description = mining.description;\n          this.btnCloseEdit.nativeElement.click();\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/minings/minings.component.ts","module.exports = \"<div class=\\\"card m-5\\\">\\n  <div class=\\\"card-body\\\">\\n\\n\\n\\n      <h1 class=\\\"form-signin-heading\\\">Your profile Tasks</h1>\\n\\n      <div class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n          <p class=\\\"form-control-static\\\">\\n            <fa name=\\\"user\\\"></fa>\\n              {{ details?.name }} -\\n            <fa name=\\\"envelope\\\"></fa>\\n            {{ details?.email }}\\n          </p>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/register\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n\\n            <i class=\\\"fa fa-user-plus\\\"></i>\\n            <a >register user</a>\\n          </button>\\n            <!-- modal -->\\n          <!-- <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n              <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                  <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">  <h1>Register</h1></h5>\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                  </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n\\n                  <p class=\\\"lead\\\">Already a member? Please  instead.</p>\\n                  <form (submit)=\\\"register()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\">Full name</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\" [(ngModel)]=\\\"credentials.name\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"email\\\">Email address</label>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"password\\\">Password</label>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register!</button>\\n                    </div>\\n                  </form>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div> -->\\n          <!-- fin modal -->\\n          <p class=\\\"form-control-static\\\"></p>\\n        </div>\\n      </div>\\n\\n\\n      <app-minings></app-minings>\\n      <br>\\n      <app-tasks></app-tasks>\\n\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { ViewChild, Component, ElementRef } from '@angular/core';\nimport { AuthenticationService, UserDetails, TokenPayload } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent {\n  @ViewChild('btnClose') btnClose : ElementRef\n  details: UserDetails;\n  credentials: TokenPayload = {\n    email: '',\n    name: '',\n    password: ''\n  };\n\n\n  constructor(private auth: AuthenticationService, private router: Router) {\n\n  }\n\n\n\n  ngOnInit() {\n    this.auth.profile().subscribe(user => {\n      this.details = user;\n    }, (err) => {\n      console.error(err);\n    });\n  }\n  register() {\n    this.auth.register(this.credentials).subscribe(() => {\n      this.btnClose.nativeElement.click();\n      this.router.navigateByUrl('/profile');\n\n    }, (err) => {\n      console.error(err);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/profile/profile.component.ts","module.exports = \"<!-- <div class=\\\"card m-3\\\">\\n  <div class=\\\"card-body\\\"> -->\\n\\n    <!-- Button trigger modal -->\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n      Launch demo modal\\n    </button> -->\\n\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">  <h1>Register</h1></h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n\\n            <p class=\\\"lead\\\">Already a member? Please  instead.</p>\\n            <form (submit)=\\\"register()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Full name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\" [(ngModel)]=\\\"credentials.name\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email address</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register!</button>\\n              </div>\\n            </form>\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n      <!-- <h1>Register</h1>\\n      <p class=\\\"lead\\\">Already a member? Please <a routerLink=\\\"/login\\\">log in</a> instead.</p>\\n      <form (submit)=\\\"register()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Full name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\" [(ngModel)]=\\\"credentials.name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Register!</button>\\n      </form> -->\\n\\n  <!-- </div>\\n\\n</div> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { ViewChild, Component, ElementRef } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n\n  credentials: TokenPayload = {\n    email: '',\n    name: '',\n    password: ''\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  register() {\n    this.auth.register(this.credentials).subscribe(() => {\n\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* The switch - the box around the slider */\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {display:none;}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: .4s;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: .4s;\\n}\\n\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  transform: translateX(26px);\\n}\\n\\n/* Rounded sliders */\\n.slider.round {\\n  border-radius: 34px;\\n}\\n\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.css\n// module id = ../../../../../src/app/components/tasks/tasks.component.css\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"mb-3\\\">Vista Task</h4>\\n    <form (submit)=\\\"addTask($event)\\\">\\n      <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Add A Task\\\">\\n          <span class=\\\"input-group-addon\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                  Add A task\\n                </button>\\n          </span>\\n      </div>\\n      </form>\\n\\n\\n<table class=\\\"table text-center table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th>Status</th>\\n      <th>Title</th>\\n      <th>Operations</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n\\n    <div  class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n        <img src=\\\"../../assets/img/loader.gif\\\">\\n\\n    </div>\\n    <tr *ngFor=\\\"let task of tasks\\\">\\n      <td>\\n\\n        <label class=\\\"switch\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"task.isDone\\\" (click)=\\\"updateStatus(task)\\\">\\n          <span class=\\\"slider round\\\"></span>\\n        </label>\\n\\n      </td>\\n      <td>{{ task.title }}</td>\\n      <td>\\n        <swal\\n          #deleteSwal\\n          title=\\\"Delete {{ task.title }}?\\\"\\n          text=\\\"Swal confirm\\\"\\n          type=\\\"warning\\\"\\n          [showCancelButton]=\\\"true\\\"\\n          [focusCancel]=\\\"true\\\"\\n          (confirm)=\\\"deleteTask(task._id)\\\">\\n        </swal>\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteSwal.show()\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.html\n// module id = ../../../../../src/app/components/tasks/tasks.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { TaskService } from '../../services/task.service';\nimport { Task } from '../../models/Task';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css'],\n  providers: [TaskService]\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[];\n  title: string;\n  loading: boolean;\n\n  constructor(private taskService: TaskService) {\n    this.loading = true;\n    this.taskService.getTasks()\n      .subscribe(tasks => {\n\n        if (!tasks){\n          console.log('error server');\n        }else{\n          this.loading = false;\n          console.log(tasks);\n          this.tasks = tasks;\n        }\n      });\n  }\n\n  ngOnInit() {\n\n  }\n\n  addTask(event){\n    event.preventDefault();\n    const newTask:Task = {\n      title: this.title,\n      isDone: false\n    };\n    this.taskService.addTask(newTask)\n      .subscribe(task => {\n        this.tasks.push(task);\n        this.title = '';\n\n      })\n  }\n\n  deleteTask(id) {\n\n    if (!id == false ){\n      const tasks = this.tasks;\n      this.taskService.deleteTask(id)\n        .subscribe(data => {\n          console.log(data)\n          console.log(data.n);\n          if(data.n == 1) {\n            for(let i = 0; i < tasks.length; i++) {\n              if(tasks[i]._id == id) {\n                tasks.splice(i, 1);\n              }\n            }\n          }\n        })\n    }\n  }\n\n  updateStatus(task: Task) {\n    var newTask = {\n      _id: task._id,\n      title: task.title,\n      isDone: !task.isDone\n    };\n    this.taskService.updateTask(newTask)\n      .subscribe(res => {\n        task.isDone = !task.isDone;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/components/tasks/tasks.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators/map';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nexport interface UserDetails {\n  _id: string;\n  email: string;\n  name: string;\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  email: string;\n  password: string;\n  name?: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string;\n\n  domain: string = environment.domain;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  private saveToken(token: string): void {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  private request(method: 'post'|'get', type: 'login'|'register'|'profile', user?: TokenPayload): Observable<any> {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`${this.domain}/api/${type}`, user);\n    } else {\n      base = this.http.get(`${this.domain}/api/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.request('post', 'register', user);\n  }\n\n  public login(user: TokenPayload): Observable<any> {\n    return this.request('post', 'login', user);\n  }\n\n  public profile(): Observable<any> {\n    return this.request('get', 'profile');\n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/authentication.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport 'rxjs/add/operator/map';\n\nimport { Mining } from '../models/Mining' ;\n\n@Injectable()\nexport class MiningService {\n \n  domain: string = environment.domain;\n  constructor(private http: HttpClient) {}\n\n    getMinings(){\n      return this.http.get<Mining[]>(`${this.domain}/api/mining`)\n        .map(res => res);\n    }\n\n    addMining(newMining: Mining){\n      return this.http.post<Mining>(`${this.domain}/api/mining`, newMining)\n        .map(res => res);\n    }\n\n    deleteMining(id){\n      return this.http.delete<Mining>(`${this.domain}/api/mining/${id}`)\n        .map(res => res);\n    }\n\n    updateMining(newMining){\n      return this.http.put<Mining>(`${this.domain}/api/mining/${newMining._id}`, newMining)\n        .map(res => res)\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/mining.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport 'rxjs/add/operator/map';\nimport { environment } from '../../environments/environment';\nimport { Task } from '../models/Task' ;\n\n// console.log(environment.domain);\n\n@Injectable()\nexport class TaskService {\n\n  domain: string = environment.domain;\n\n\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getTasks() {\n    return this.http.get<Task[]>(`${this.domain}/api/tasks`)\n      .map(res => res);\n  }\n\n  addTask(newTask: Task) {\n    return this.http.post<Task>(`${this.domain}/api/task`, newTask)\n      .map(res => res);\n  }\n\n  deleteTask(id) {\n    return this.http.delete<Task>(`${this.domain}/api/task/${id}`)\n      .map(res => res);\n  }\n\n  updateTask(newTask) {\n    return this.http.put<Task>(`${this.domain}/api/task/${newTask._id}`, newTask)\n      .map(res => res)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/app/services/task.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  domain: 'http://localhost:3000'\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/chkdsk/Documents/GitHub/mills/src/client/src/main.ts"],"sourceRoot":"webpack:///"}